<launch>
  <arg name="gui" default="true" />
  <arg name="world_file" default="$(find novel_gazebo)/world/playground.world"/>
  <arg name="map_file" value="$(find expected_scan_generator)/map_by_thomas.yaml"/>

  <group>
    <remap from="scan" to="raw_scan"/>
    <env name="GAZEBO_MODEL_PATH" value="$(find novel_gazebo)/model"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="use_sim_time" value="true"/>
      <arg name="debug" value="false"/>
      <arg name="gui" value="$(arg gui)" />
      <arg name="world_name" value="$(arg world_file)"/>
    </include>
  </group>

  <group>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
    <include file="$(find novel_bringup)/launch/include/novel_amcl.launch"/>
    <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>

<!--    <include file="$(find turtlebot_gazebo)/launch/amcl_demo.launch">
      <arg name="map_file" value="$(find expected_scan_generator)/map_by_thomas.yaml"/>
    </include> -->
  </group>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find expected_scan_generator)/rviz/view_laserscans.rviz"/>
  <param name="min_angle" value="0"/>
  <param name="max_angle" value="6.28319"/>
  <param name="range" value="3.5"/>
  <node pkg="expected_scan_generator" type="expected_scan_generator" name="expected_scan_node"/>

  <node pkg="novel_lidar_detection" type="novel_lidar_detection" name="novel_lidar_detection">
    <param name="out_scan_topic" value="scan"/>
    <param name="in_scan_topic" value="raw_scan"/>
    <param name="covariance_threshold" value="0.008"/>
  </node>

  <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(find novel_gazebo)/model/turtlebot_lidar/turtlebot_lidar.urdf.xacro"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x -0.96 -y -0.8 -z 0.0 -model turtlebot_lidar"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
      args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <node name="novel_tf_publisher" pkg="novel_lidar_detection" type="novel_publish_tf"/>

</launch>

